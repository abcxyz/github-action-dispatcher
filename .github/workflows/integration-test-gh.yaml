# Copyright 2025 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'GitHub Integration Tests'

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'The runner environment to use for jobs.'
        required: false
        type: 'string'
        default: 'self-hosted'

jobs:
  test-gh-cli:
    name: 'Test gh CLI'
    runs-on: '${{ inputs.runs-on }}'
    permissions:
      contents: 'read'
    env:
      GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    steps:
      - name: 'Verify gh CLI is available'
        run: |
          gh --version
          gh repo list

  test-github-env-and-output:
    name: 'Test GITHUB_OUTPUT and GITHUB_ENV'
    runs-on: '${{ inputs.runs-on }}'
    steps:
      - name: 'Set environment variables'
        id: 'setter'
        run: |
          echo "out1=hello" >> "${GITHUB_OUTPUT}"
          echo "MY_ENV=test" >> "${GITHUB_ENV}"
      - name: 'Verify environment variables'
        run: |
          if [[ "${{ steps.setter.outputs.out1 }}" != "hello" ]]; then
            echo "::error::GITHUB_OUTPUT not set correctly"
            exit 1
          fi
          if [[ "${MY_ENV}" != "test" ]]; then
            echo "::error::GITHUB_ENV not set correctly"
            exit 1
          fi

  test-github-functions:
    name: 'Test GitHub native functions'
    runs-on: '${{ inputs.runs-on }}'
    steps:
      - name: 'Test fromJSON'
        run: |
          output='${{ fromJSON('{"key": "value"}').key }}'
          if [[ "${output}" != "value" ]]; then
            echo "::error::fromJSON function failed"
            exit 1
          fi

  complex-workflow-job-1:
    name: 'Complex Workflow - Job 1'
    runs-on: '${{ inputs.runs-on }}'
    outputs:
      job1_output: '${{ steps.job1.outputs.test_output }}'
    steps:
      - id: 'job1'
        run: 'echo "test_output=job1_data" >> "${GITHUB_OUTPUT}"'

  complex-workflow-job-2:
    name: 'Complex Workflow - Job 2'
    runs-on: '${{ inputs.runs-on }}'
    needs: ['complex-workflow-job-1']
    outputs:
      job2_output: '${{ steps.job2.outputs.test_output }}'
    steps:
      - name: 'Verify data from Job 1'
        run: |
          if [[ "${{ needs.complex-workflow-job-1.outputs.job1_output }}" != "job1_data" ]]; then
            echo "::error::Did not receive correct output from Job 1"
            exit 1
          fi
      - id: 'job2'
        run: 'echo "test_output=job2_data" >> "${GITHUB_OUTPUT}"'

  complex-workflow-job-3:
    name: 'Complex Workflow - Job 3 (Multiple Dependencies)'
    runs-on: '${{ inputs.runs-on }}'
    needs: ['complex-workflow-job-1', 'complex-workflow-job-2']
    steps:
      - name: 'Verify data from Job 1 and Job 2'
        run: |
          if [[ "${{ needs.complex-workflow-job-1.outputs.job1_output }}" != "job1_data" ]]; then
            echo "::error::Did not receive correct output from Job 1"
            exit 1
          fi
          if [[ "${{ needs.complex-workflow-job-2.outputs.job2_output }}" != "job2_data" ]]; then
            echo "::error::Did not receive correct output from Job 2"
            exit 1
          fi
