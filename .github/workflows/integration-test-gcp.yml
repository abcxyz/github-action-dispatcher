# Copyright 2025 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'GCP Integration Tests'

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'The runner environment to use for the jobs.'
        required: false
        type: 'string'
        default: 'self-hosted'

env:
  WIF_PROVIDER: 'projects/727875687543/locations/global/workloadIdentityPools/github-actions-on-gcp-p-a63b4c/providers/github-actions-on-gcp-p-a63b4c'
  WIF_SERVICE_ACCOUNT: 'github-automation-bot@gha-on-gcp-p-a63b4c.iam.gserviceaccount.com'
  GAR_LOCATION: 'us'
  GAR_IMAGE_NAME: 'ghss-artifacts-p-25/docker-images/gha-runner'

jobs:
  test-gcp-auth:
    name: 'Test google-github-actions/auth'
    runs-on: '${{ inputs.runs-on }}'
    permissions:
      id-token: 'write'
    steps:
      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@a6e2e39c0a0331da29f7fd2c2a20a427e8d3ad1f' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WIF_PROVIDER }}'
          service_account: '${{ env.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@6189d56e4096ee891640bb02ac264be376592d6a' # ratchet:google-github-actions/setup-gcloud@v2/

      - name: 'Verify gcloud authentication'
        run: 'gcloud auth list'

      - name: 'Login to GAR'
        uses: 'docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc' # ratchet:docker/login-action@v2
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: 'Verify Docker authentication'
        run: 'docker manifest inspect ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GAR_IMAGE_NAME }}:latest'
