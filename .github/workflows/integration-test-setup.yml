# Copyright 2025 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Setup Actions Integration Tests'

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'The runner environment to use for the jobs.'
        required: false
        type: 'string'
        default: 'ubuntu-latest'

jobs:
  test-setup-python:
    name: 'Test setup-python'
    runs-on: '${{ inputs.runs-on }}'
    steps:
      - name: 'setup-python'
        uses: 'actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065' # ratchet:actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: 'verify-python'
        run: |
          python3 <<'EOF'
          import platform
          version = platform.python_version().split('.')
          if version[0] != '3' or version[1] != '12':
            exit(1)
          EOF

  test-setup-gcloud:
    name: 'Test setup-gcloud'
    runs-on: '${{ inputs.runs-on }}'
    steps:
      - name: 'setup-gcloud'
        uses: 'google-github-actions/setup-gcloud@6189d56e4096ee891640bb02ac264be376592d6a' # ratchet:google-github-actions/setup-gcloud@v2/
      - name: 'verify-gcloud'
        run: 'gcloud -h'

  test-setup-node:
    name: 'Test setup-node'
    runs-on: '${{ inputs.runs-on }}'
    steps:
      - name: 'setup-node'
        uses: 'actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020' # ratchet:actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: 'verify-node'
        run: |
          node <<'EOF'
          const major = process.versions.node.split(".").map(Number)[0]
          if (major !== 20) {
            process.exit(1)
          }
          EOF

  test-setup-java:
    name: 'Test setup-java'
    runs-on: '${{ inputs.runs-on }}'
    steps:
      - name: 'setup-java'
        uses: 'actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00' # ratchet:actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'
      - name: 'verify-java'
        run: |
          cat <<'EOF' > Test.java
          void main() {
           if (Runtime.version().feature() != 24) {
             System.exit(1);
           }
          }
          EOF
          java --enable-preview Test.java

  test-setup-go:
    name: 'Test setup-go'
    runs-on: '${{ inputs.runs-on }}'
    steps:
      - name: 'setup-go'
        uses: 'actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5' # ratchet:actions/setup-go@v5
        with:
          go-version: '1.24.5'
      - name: 'verify-go'
        run: |
          cat <<'EOF' > test.go
          package main
          import "runtime"
          func main() {
            if runtime.Version() != "go1.24.5" {
              panic("wrong version")
            }
          }
          EOF
          go run test.go

  test-setup-dotnet:
    name: 'Test setup-dotnet'
    runs-on: '${{ inputs.runs-on }}'
    steps:
      - name: 'setup-dotnet'
        uses: 'actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9' # ratchet:actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 'verify-dotnet'
        run: |
          dotnet tool install --global dotnet-script --version 1.6.0
          cat <<'EOF' > test.csx
          var version = Environment.Version;
          if (version.Major != 8 || version.Minor != 0)
          {
            throw new Exception($"Want .NET 8.0.x, got {version}");
          }
          EOF
          dotnet-script test.csx
