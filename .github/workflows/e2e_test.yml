name: 'E2E Test Webhook PR'

on:
  push:
    branches:
      - 'main'
    paths:
      - 'cmd/github-actions-on-gcp/**'
      - 'cmd/webhook-tester/**'
      - 'pkg/**'
      - '.github/workflows/e2e_test.yml'
  pull_request:
    paths:
      - 'cmd/github-actions-on-gcp/**'
      - 'cmd/webhook-tester/**'
      - 'pkg/**'
      - '.github/workflows/e2e_test.yml'

env:
  WIF_PROVIDER: 'projects/727875687543/locations/global/workloadIdentityPools/github-actions-on-gcp-p-a63b4c/providers/github-actions-on-gcp-p-a63b4c'
  WIF_SERVICE_ACCOUNT: 'github-automation-bot@gha-on-gcp-p-a63b4c.iam.gserviceaccount.com'
  DOCKER_REGISTRY: 'us-docker.pkg.dev'
  DOCKER_REPO: 'us-docker.pkg.dev/ghss-artifacts-p-25/docker-images'
  IMAGE_NAME: 'gha-webhook'
  AUTOPUSH_PROJECT_ID: 'action-dispatcher-webhook-a-18'
  AUTOPUSH_REGION: 'us-central1'

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  build-and-test:
    name: 'Build, publish, and test Docker image'
    runs-on: 'ubuntu-latest'
    env:
      GITHUB_APP_ID: '1617912'
      KMS_APP_PRIVATE_KEY_ID: 'projects/action-dispatcher-webhook-a-18/locations/global/keyRings/webhook-pr-test-keyring/cryptoKeys/webhook-pr-test-app-key/cryptoKeyVersions/4'
      RUNNER_LOCATION: 'us-central1'
      RUNNER_PROJECT_ID: 'action-dispatcher-webhook-a-18'
      RUNNER_REPOSITORY_ID: 'docker-images'
      RUNNER_SERVICE_ACCOUNT: 'action-dispatcher-webhook-sa@action-dispatcher-webhook-a-18.iam.gserviceaccount.com'
      RUNTIME_SERVICE_ACCOUNT: 'action-dispatcher-webhook-sa@action-dispatcher-webhook-a-18.iam.gserviceaccount.com'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Setup Go'
        uses: 'actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5' # ratchet:actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@a6e2e39c0a0331da29f7fd2c2a20a427e8d3ad1f' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WIF_PROVIDER }}'
          service_account: '${{ env.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@6189d56e4096ee891640bb02ac264be376592d6a' # ratchet:google-github-actions/setup-gcloud@v2
        with:
          version: '529.0.0'

      - uses: 'docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772' # ratchet:docker/login-action@v3
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.DOCKER_REGISTRY }}'

      - id: 'tag'
        name: 'Set Docker Tag for PR'
        run: 'echo "image_tag=webhook-pr-${{ github.event.number }}-${{ github.sha }}" >> "$GITHUB_OUTPUT"'

      - name: 'Create dummy tag for goreleaser'
        run: 'git tag v0.0.0-pr-${{ github.event.number }}'

      - name: 'Build the server container with goreleaser'
        uses: 'goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552' # ratchet:goreleaser/goreleaser-action@v6
        with:
          version: 'v1.12.3'
          args: 'release -f .goreleaser.e2e.yml --rm-dist --skip-validate --skip-publish'
        env:
          DOCKER_TAG: '${{ steps.tag.outputs.image_tag }}'
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: 'Fetch Webhook Secret'
        id: 'fetch-secret'
        run: |-
          gcloud secrets versions access latest --secret="webhook-pr-test-secret" --project="${{ env.AUTOPUSH_PROJECT_ID }}" > /tmp/secret.txt

      - name: 'Run Docker Container'
        id: 'docker_run'
        run: |-
          IMAGE_TAG="${{ steps.tag.outputs.image_tag }}"
          WEBHOOK_SECRET_MOUNT_PATH="/etc/secrets/webhook-pr-test-key"
          WEBHOOK_SECRET_NAME="latest"
          CONTAINER_ID=$(docker run -d -p 8080:8080 \
            -v "/tmp/secret.txt:${WEBHOOK_SECRET_MOUNT_PATH}/${WEBHOOK_SECRET_NAME}" \
            -v "${{ steps.auth.outputs.credentials_file_path }}:/tmp/creds.json" \
            -e "GOOGLE_APPLICATION_CREDENTIALS=/tmp/creds.json" \
            -e "GITHUB_APP_ID=${{ env.GITHUB_APP_ID }}" \
            -e "KMS_APP_PRIVATE_KEY_ID=${{ env.KMS_APP_PRIVATE_KEY_ID }}" \
            -e "RUNNER_LOCATION=${{ env.RUNNER_LOCATION }}" \
            -e "RUNNER_PROJECT_ID=${{ env.RUNNER_PROJECT_ID }}" \
            -e "RUNNER_REPOSITORY_ID=${{ env.RUNNER_REPOSITORY_ID }}" \
            -e "RUNNER_SERVICE_ACCOUNT=${{ env.RUNNER_SERVICE_ACCOUNT }}" \
            -e "WEBHOOK_KEY_MOUNT_PATH=${WEBHOOK_SECRET_MOUNT_PATH}" \
            -e "WEBHOOK_KEY_NAME=${WEBHOOK_SECRET_NAME}" \
            "${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}-amd64")
          echo "container_id=${CONTAINER_ID}" >> "$GITHUB_OUTPUT"

      - name: 'Wait for service to be healthy'
        run: |-
          echo "Waiting for container to be healthy..."
          timeout 30s bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/healthz)" != "200" ]]; do echo -n "."; sleep 1; done'
          echo "Container is healthy!"

      - name: 'Run Webhook Tester'
        run: |-
          set -euo pipefail
          SECRET=$(gcloud secrets versions access latest --secret="webhook-pr-test-secret" --project="${{ env.AUTOPUSH_PROJECT_ID }}")
          go run ./cmd/webhook-tester --url="http://localhost:8080/webhook" --secret="${SECRET}"

      - name: 'Stop and Remove Docker Container'
        if: 'always()'
        run: |-
          CONTAINER_ID='${{ needs.build-and-test.outputs.container_id }}'
          docker logs "${CONTAINER_ID}"
          docker stop "${CONTAINER_ID}"
          docker rm "${CONTAINER_ID}"

